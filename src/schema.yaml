openapi: 3.0.3
info:
  title: Blog project API
  version: 1.0.0
  description: API documentation made with drf-spectacular
paths:
  /accounts/current:
    get:
      operationId: accounts_current_retrieve
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDetail'
          description: ''
  /accounts/list:
    get:
      operationId: accounts_list_list
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountList'
          description: ''
  /accounts/register:
    post:
      operationId: accounts_register_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountCreate'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema: null
          description: ''
  /api/token/refresh/:
    post:
      operationId: api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /auth/token:
    post:
      operationId: auth_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /blog/create:
    post:
      operationId: blog_create_create
      tags:
      - blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlogCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogCreate'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema: null
          description: ''
  /blog/list:
    get:
      operationId: blog_list_list
      tags:
      - blog
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BlogList'
          description: ''
  /blog/retrieve:
    get:
      operationId: blog_retrieve_retrieve
      tags:
      - blog
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogDetail'
          description: ''
components:
  schemas:
    AccountCreate:
      type: object
      properties:
        email:
          type: string
          format: email
        given_name:
          type: string
          maxLength: 256
        family_name:
          type: string
          maxLength: 256
        password:
          type: string
          writeOnly: true
          maxLength: 64
          minLength: 8
        repeated_password:
          type: string
          writeOnly: true
          maxLength: 64
          minLength: 8
      required:
      - email
      - family_name
      - given_name
      - password
      - repeated_password
    AccountDetail:
      type: object
      properties:
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        given_name:
          type: string
          nullable: true
          maxLength: 256
        family_name:
          type: string
          nullable: true
          maxLength: 256
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - email
      - updated_at
    AccountList:
      type: object
      properties:
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        given_name:
          type: string
          nullable: true
          maxLength: 256
        family_name:
          type: string
          nullable: true
          maxLength: 256
      required:
      - email
    BlogCreate:
      type: object
      properties:
        title:
          type: string
          maxLength: 512
        content:
          type: string
        created_by:
          type: string
          format: uuid
      required:
      - content
      - created_by
      - title
    BlogDetail:
      type: object
      description: Works like regural ModelSerializer but passes all fields to read_only_fields
        property in Meta class
      properties:
        title:
          type: string
          readOnly: true
        content:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - content
      - created_at
      - title
    BlogList:
      type: object
      description: Works like regural ModelSerializer but passes all fields to read_only_fields
        property in Meta class
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - id
      - title
      - updated_at
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
